<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on sUnit Blog</title>
    <link>//www.sunitparekh.in/tags/devops/</link>
    <description>Recent content in devops on sUnit Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2023 sunitparekh.in</copyright>
    <lastBuildDate>Wed, 23 Oct 2013 00:00:00 +0000</lastBuildDate><atom:link href="//www.sunitparekh.in/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zero downtime using blue-green deployment strategy</title>
      <link>//www.sunitparekh.in/posts/19-blue-green-deployment/</link>
      <pubDate>Wed, 23 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>//www.sunitparekh.in/posts/19-blue-green-deployment/</guid>
      <description>Zero downtime during application deployment is one of the key requirements for continuos delivery. And no business would like their site to be down and showing maintenance page every few days/weeks during deployment.
To achieve this we decide to go for blue-green deployment. However, we were challenged with how to do this in legacy style data center infrastructure where we are,
Not able to spin new machines and throw away old machines automatically using scripts Don&amp;rsquo;t have ability to add/remove instances using scripts from load-balancer Network level configurations are done manually like firewall setting Also keeping full in-active stack didn&amp;rsquo;t sound good idea.</description>
    </item>
    
  </channel>
</rss>
